[tool:pytest]
# Pytest configuration for Python for Semiconductors

# Test discovery
testpaths = modules/ projects/
python_files = test_*.py *_test.py
python_functions = test_*
python_classes = Test*

# Coverage configuration
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --cov=modules
    --cov=projects
    --cov-report=term-missing
    --cov-report=xml
    --cov-report=html:htmlcov
    --cov-fail-under=80
    --durations=10

# Markers for different test categories
markers =
    unit: Unit tests for individual components
    integration: Integration tests across modules
    smoke: Smoke tests for basic functionality
    regression: Regression tests for model performance
    slow: Tests that take longer than 30 seconds
    gpu: Tests that require GPU resources
    dataset: Tests that require external datasets
    benchmark: Performance benchmark tests

# Minimum version requirements
minversion = 6.0

# Filter warnings that are not actionable
filterwarnings =
    ignore::UserWarning
    ignore::DeprecationWarning:sklearn.*
    ignore::DeprecationWarning:tensorflow.*
    ignore::FutureWarning:sklearn.*
    ignore::PendingDeprecationWarning
    # Allow specific warnings that are useful
    error::UserWarning:modules.*
    error::DeprecationWarning:modules.*

# Test timeout (in seconds)
timeout = 300

# Coverage exclusions
[coverage:run]
source = modules/, projects/
omit = 
    */test_*.py
    */tests/*
    setup.py
    */venv/*
    */__pycache__/*
    */build/*
    */dist/*
    */docs/*
    */datasets/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

[coverage:html]
directory = htmlcov